<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PermanentAccess.Text" xml:space="preserve">
    <value>[FEE] for permanent access.</value>
  </data>
  <data name="FrequencyAccessSingular.Text" xml:space="preserve">
    <value>[FEE] for [PERIOD] [FREQUENCY] access.</value>
  </data>
  <data name="FrequencyAccessPlural.Text" xml:space="preserve">
    <value>[FEE] for [PERIOD] [FREQUENCY]'s access.</value>
  </data>
  <data name="Day.Text" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="Week.Text" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="Month.Text" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Year.Text" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="Subscription.Text" xml:space="preserve">
    <value>Subscription</value>
  </data>
  <data name="Main.Text" xml:space="preserve">
    <value>Main</value>
  </data>
  <data name="EditReceipts.Text" xml:space="preserve">
    <value>Edit Receipts</value>
  </data>
  <data name="EditReceipt.Text" xml:space="preserve">
    <value>Edit Receipt</value>
  </data>
  <data name="AddReceipt.Text" xml:space="preserve">
    <value>Add Receipt</value>
  </data>
  <data name="UserName.Text" xml:space="preserve">
    <value>UserName</value>
  </data>
  <data name="UserName.Help" xml:space="preserve">
    <value>Enter the username you want to add the subscription to.</value>
  </data>
  <data name="valUserName.ErrorMessage" xml:space="preserve">
    <value>UserName is Required.</value>
  </data>
  <data name="ValUserNameExists.ErrorMessage" xml:space="preserve">
    <value>UserName Does Not Exist.</value>
  </data>
  <data name="SelectPlan.Text" xml:space="preserve">
    <value>Select Plan</value>
  </data>
  <data name="SelectPlan.Help" xml:space="preserve">
    <value>Select a subscription plan.</value>
  </data>
  <data name="AddToRole.Text" xml:space="preserve">
    <value>Add To Role</value>
  </data>
  <data name="AddToRole.Help" xml:space="preserve">
    <value>Check to add the user to the plan's role.</value>
  </data>
  <data name="ReceiptSettings.Text" xml:space="preserve">
    <value>Receipt Settings</value>
  </data>
  <data name="ReceiptSettingsDescription.Text" xml:space="preserve">
    <value>Select a user and a plan to add as a subscription.</value>
  </data>
  <data name="ReceiptDetail.Text" xml:space="preserve">
    <value>Receipt Detail</value>
  </data>
  <data name="ReceiptDetailDescription.Text" xml:space="preserve">
    <value>The details about the selected receipt.</value>
  </data>
  <data name="UserName2.Text" xml:space="preserve">
    <value>UserName</value>
  </data>
  <data name="UserName2.Help" xml:space="preserve">
    <value>The username of the user the subscription belongs to.</value>
  </data>
  <data name="Plan.Text" xml:space="preserve">
    <value>Plan</value>
  </data>
  <data name="Plan.Help" xml:space="preserve">
    <value>The plan the user signed up to.</value>
  </data>
  <data name="CreateDate.Text" xml:space="preserve">
    <value>Create Date</value>
  </data>
  <data name="CreateDate.Help" xml:space="preserve">
    <value>The date the subscription was created.</value>
  </data>
  <data name="StartDate.Text" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="StartDate.Help" xml:space="preserve">
    <value>The date the subscription was started.</value>
  </data>
  <data name="EndDate.Text" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="EndDate.Help" xml:space="preserve">
    <value>The date the subscription finishes.</value>
  </data>
  <data name="Processor.Text" xml:space="preserve">
    <value>Processor</value>
  </data>
  <data name="Processor.Help" xml:space="preserve">
    <value>The payment processor used for the subscription.</value>
  </data>
  <data name="TransactionID.Text" xml:space="preserve">
    <value>Transaction ID</value>
  </data>
  <data name="TransactionID.Help" xml:space="preserve">
    <value>The transaction ID of the subscription.</value>
  </data>
  <data name="ServiceFee.Text" xml:space="preserve">
    <value>Service Fee</value>
  </data>
  <data name="ServiceFee.Help" xml:space="preserve">
    <value>The service fee of the subscription.</value>
  </data>
  <data name="Confirmation.Text" xml:space="preserve">
    <value>Are You Sure You Want To Delete This Receipt?</value>
  </data>
  <data name="ControlTitle_editreceipt.Text" xml:space="preserve">
    <value>Edit Receipt</value>
  </data>
  <data name="plStartDate2.Help" xml:space="preserve">
    <value>Optionally specify a start date for the receipt.</value>
  </data>
  <data name="plStartDate2.Text" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="StartDate2.Help" xml:space="preserve">
    <value>Leave blank to use current date.</value>
  </data>
  <data name="valStartDate.ErrorMessage" xml:space="preserve">
    <value>Start date must be a valid date.</value>
  </data>
  <data name="AdvancedSettings.Text" xml:space="preserve">
    <value>Advanced Settings</value>
  </data>
  <data name="Manual.Text" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="plProcessor.Help" xml:space="preserve">
    <value>Enter a payment processor.</value>
  </data>
  <data name="plProcessor.Text" xml:space="preserve">
    <value>Processor</value>
  </data>
  <data name="plTransactionID.Help" xml:space="preserve">
    <value>Enter a transaction ID.</value>
  </data>
  <data name="plTransactionID.Text" xml:space="preserve">
    <value>Transaction ID</value>
  </data>
  <data name="FixedEndDate.Text" xml:space="preserve">
    <value>[FEE] for access until [PERIOD]</value>
  </data>
</root>